//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace JCR.Reports.App_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsReport_TracerByEPGroupByStandard")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsReport_TracerByEPGroupByStandard : global::System.Data.DataSet {
        
        private ustReportTracerByEPGroupByStandardDataTable tableustReportTracerByEPGroupByStandard;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsReport_TracerByEPGroupByStandard() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsReport_TracerByEPGroupByStandard(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ustReportTracerByEPGroupByStandard"] != null)) {
                    base.Tables.Add(new ustReportTracerByEPGroupByStandardDataTable(ds.Tables["ustReportTracerByEPGroupByStandard"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ustReportTracerByEPGroupByStandardDataTable ustReportTracerByEPGroupByStandard {
            get {
                return this.tableustReportTracerByEPGroupByStandard;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsReport_TracerByEPGroupByStandard cln = ((dsReport_TracerByEPGroupByStandard)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ustReportTracerByEPGroupByStandard"] != null)) {
                    base.Tables.Add(new ustReportTracerByEPGroupByStandardDataTable(ds.Tables["ustReportTracerByEPGroupByStandard"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableustReportTracerByEPGroupByStandard = ((ustReportTracerByEPGroupByStandardDataTable)(base.Tables["ustReportTracerByEPGroupByStandard"]));
            if ((initTable == true)) {
                if ((this.tableustReportTracerByEPGroupByStandard != null)) {
                    this.tableustReportTracerByEPGroupByStandard.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsReport_TracerByEPGroupByStandard";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsReport_TracerByEPGroupByStandard.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableustReportTracerByEPGroupByStandard = new ustReportTracerByEPGroupByStandardDataTable();
            base.Tables.Add(this.tableustReportTracerByEPGroupByStandard);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeustReportTracerByEPGroupByStandard() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsReport_TracerByEPGroupByStandard ds = new dsReport_TracerByEPGroupByStandard();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ustReportTracerByEPGroupByStandardRowChangeEventHandler(object sender, ustReportTracerByEPGroupByStandardRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ustReportTracerByEPGroupByStandardDataTable : global::System.Data.TypedTableBase<ustReportTracerByEPGroupByStandardRow> {
            
            private global::System.Data.DataColumn columnChapterSortOrder;
            
            private global::System.Data.DataColumn columnStandardSortOrder;
            
            private global::System.Data.DataColumn columnEPSortOrder;
            
            private global::System.Data.DataColumn columnReportDataType;
            
            private global::System.Data.DataColumn columnChapterID;
            
            private global::System.Data.DataColumn columnChapterCode;
            
            private global::System.Data.DataColumn columnChapterName;
            
            private global::System.Data.DataColumn columnStandardTextID;
            
            private global::System.Data.DataColumn columnStandardLabel;
            
            private global::System.Data.DataColumn columnStandardText;
            
            private global::System.Data.DataColumn columnEPTextID;
            
            private global::System.Data.DataColumn columnEPLabel;
            
            private global::System.Data.DataColumn columnEPText;
            
            private global::System.Data.DataColumn columnNumerator;
            
            private global::System.Data.DataColumn columnDenominator;
            
            private global::System.Data.DataColumn columnCompliancePercent;
            
            private global::System.Data.DataColumn columnTotalNumerator;
            
            private global::System.Data.DataColumn columnTotalDenominator;
            
            private global::System.Data.DataColumn columnTotalCompliancePercent;
            
            private global::System.Data.DataColumn columnResponseCount;
            
            private global::System.Data.DataColumn columnTracerCustomID;
            
            private global::System.Data.DataColumn columnTracerCustomName;
            
            private global::System.Data.DataColumn columnTracerResponseID;
            
            private global::System.Data.DataColumn columnTracerResponseTitle;
            
            private global::System.Data.DataColumn columnObservationDate;
            
            private global::System.Data.DataColumn columnTracerResponseNote;
            
            private global::System.Data.DataColumn columnTracerQuestionID;
            
            private global::System.Data.DataColumn columnQuestionText;
            
            private global::System.Data.DataColumn columnSortOrder;
            
            private global::System.Data.DataColumn columnTracerQuestionAnswerID;
            
            private global::System.Data.DataColumn columnUpdatedByID;
            
            private global::System.Data.DataColumn columnUpdatedDate;
            
            private global::System.Data.DataColumn columnUpdatedByUserName;
            
            private global::System.Data.DataColumn columnTagID;
            
            private global::System.Data.DataColumn columnElementID;
            
            private global::System.Data.DataColumn columnCopText;
            
            private global::System.Data.DataColumn columnCopSortOrder;
            
            private global::System.Data.DataColumn columnTagSortOrder;
            
            private global::System.Data.DataColumn columnRequirementName;
            
            private global::System.Data.DataColumn columnDeemedService;
            
            private global::System.Data.DataColumn columnCodeID;
            
            private global::System.Data.DataColumn columnTagCode;
            
            private global::System.Data.DataColumn columnOrgName_Rank3;
            
            private global::System.Data.DataColumn columnOrgName_Rank2;
            
            private global::System.Data.DataColumn columnOrgName_Rank1_Dept;
            
            private global::System.Data.DataColumn columnOrgID_Rank1_Dept;
            
            private global::System.Data.DataColumn columnOrgID_Rank2;
            
            private global::System.Data.DataColumn columnOrgID_Rank3;
            
            private global::System.Data.DataColumn columnRank3_IsActive;
            
            private global::System.Data.DataColumn columnRank2_IsActive;
            
            private global::System.Data.DataColumn columnRank1_IsActive;
            
            private global::System.Data.DataColumn columnTracerQuestionNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ustReportTracerByEPGroupByStandardDataTable() {
                this.TableName = "ustReportTracerByEPGroupByStandard";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ustReportTracerByEPGroupByStandardDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ustReportTracerByEPGroupByStandardDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChapterSortOrderColumn {
                get {
                    return this.columnChapterSortOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StandardSortOrderColumn {
                get {
                    return this.columnStandardSortOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPSortOrderColumn {
                get {
                    return this.columnEPSortOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReportDataTypeColumn {
                get {
                    return this.columnReportDataType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChapterIDColumn {
                get {
                    return this.columnChapterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChapterCodeColumn {
                get {
                    return this.columnChapterCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChapterNameColumn {
                get {
                    return this.columnChapterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StandardTextIDColumn {
                get {
                    return this.columnStandardTextID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StandardLabelColumn {
                get {
                    return this.columnStandardLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StandardTextColumn {
                get {
                    return this.columnStandardText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPTextIDColumn {
                get {
                    return this.columnEPTextID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPLabelColumn {
                get {
                    return this.columnEPLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EPTextColumn {
                get {
                    return this.columnEPText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumeratorColumn {
                get {
                    return this.columnNumerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DenominatorColumn {
                get {
                    return this.columnDenominator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompliancePercentColumn {
                get {
                    return this.columnCompliancePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalNumeratorColumn {
                get {
                    return this.columnTotalNumerator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalDenominatorColumn {
                get {
                    return this.columnTotalDenominator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCompliancePercentColumn {
                get {
                    return this.columnTotalCompliancePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResponseCountColumn {
                get {
                    return this.columnResponseCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TracerCustomIDColumn {
                get {
                    return this.columnTracerCustomID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TracerCustomNameColumn {
                get {
                    return this.columnTracerCustomName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TracerResponseIDColumn {
                get {
                    return this.columnTracerResponseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TracerResponseTitleColumn {
                get {
                    return this.columnTracerResponseTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObservationDateColumn {
                get {
                    return this.columnObservationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TracerResponseNoteColumn {
                get {
                    return this.columnTracerResponseNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TracerQuestionIDColumn {
                get {
                    return this.columnTracerQuestionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuestionTextColumn {
                get {
                    return this.columnQuestionText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SortOrderColumn {
                get {
                    return this.columnSortOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TracerQuestionAnswerIDColumn {
                get {
                    return this.columnTracerQuestionAnswerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedByIDColumn {
                get {
                    return this.columnUpdatedByID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedDateColumn {
                get {
                    return this.columnUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedByUserNameColumn {
                get {
                    return this.columnUpdatedByUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TagIDColumn {
                get {
                    return this.columnTagID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElementIDColumn {
                get {
                    return this.columnElementID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CopTextColumn {
                get {
                    return this.columnCopText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CopSortOrderColumn {
                get {
                    return this.columnCopSortOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TagSortOrderColumn {
                get {
                    return this.columnTagSortOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequirementNameColumn {
                get {
                    return this.columnRequirementName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeemedServiceColumn {
                get {
                    return this.columnDeemedService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeIDColumn {
                get {
                    return this.columnCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TagCodeColumn {
                get {
                    return this.columnTagCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgName_Rank3Column {
                get {
                    return this.columnOrgName_Rank3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgName_Rank2Column {
                get {
                    return this.columnOrgName_Rank2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgName_Rank1_DeptColumn {
                get {
                    return this.columnOrgName_Rank1_Dept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgID_Rank1_DeptColumn {
                get {
                    return this.columnOrgID_Rank1_Dept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgID_Rank2Column {
                get {
                    return this.columnOrgID_Rank2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgID_Rank3Column {
                get {
                    return this.columnOrgID_Rank3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Rank3_IsActiveColumn {
                get {
                    return this.columnRank3_IsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Rank2_IsActiveColumn {
                get {
                    return this.columnRank2_IsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Rank1_IsActiveColumn {
                get {
                    return this.columnRank1_IsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TracerQuestionNoteColumn {
                get {
                    return this.columnTracerQuestionNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ustReportTracerByEPGroupByStandardRow this[int index] {
                get {
                    return ((ustReportTracerByEPGroupByStandardRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ustReportTracerByEPGroupByStandardRowChangeEventHandler ustReportTracerByEPGroupByStandardRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ustReportTracerByEPGroupByStandardRowChangeEventHandler ustReportTracerByEPGroupByStandardRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ustReportTracerByEPGroupByStandardRowChangeEventHandler ustReportTracerByEPGroupByStandardRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ustReportTracerByEPGroupByStandardRowChangeEventHandler ustReportTracerByEPGroupByStandardRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddustReportTracerByEPGroupByStandardRow(ustReportTracerByEPGroupByStandardRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ustReportTracerByEPGroupByStandardRow AddustReportTracerByEPGroupByStandardRow(
                        int ChapterSortOrder, 
                        int StandardSortOrder, 
                        int EPSortOrder, 
                        int ReportDataType, 
                        int ChapterID, 
                        string ChapterCode, 
                        string ChapterName, 
                        int StandardTextID, 
                        string StandardLabel, 
                        string StandardText, 
                        int EPTextID, 
                        string EPLabel, 
                        string EPText, 
                        int Numerator, 
                        int Denominator, 
                        decimal CompliancePercent, 
                        int TotalNumerator, 
                        int TotalDenominator, 
                        decimal TotalCompliancePercent, 
                        int ResponseCount, 
                        int TracerCustomID, 
                        string TracerCustomName, 
                        int TracerResponseID, 
                        string TracerResponseTitle, 
                        System.DateTime ObservationDate, 
                        string TracerResponseNote, 
                        int TracerQuestionID, 
                        string QuestionText, 
                        int SortOrder, 
                        int TracerQuestionAnswerID, 
                        int UpdatedByID, 
                        System.DateTime UpdatedDate, 
                        string UpdatedByUserName, 
                        int TagID, 
                        int ElementID, 
                        string CopText, 
                        int CopSortOrder, 
                        int TagSortOrder, 
                        string RequirementName, 
                        string DeemedService, 
                        int CodeID, 
                        string TagCode, 
                        string OrgName_Rank3, 
                        string OrgName_Rank2, 
                        string OrgName_Rank1_Dept, 
                        int OrgID_Rank1_Dept, 
                        int OrgID_Rank2, 
                        int OrgID_Rank3, 
                        int Rank3_IsActive, 
                        int Rank2_IsActive, 
                        int Rank1_IsActive, 
                        string TracerQuestionNote) {
                ustReportTracerByEPGroupByStandardRow rowustReportTracerByEPGroupByStandardRow = ((ustReportTracerByEPGroupByStandardRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChapterSortOrder,
                        StandardSortOrder,
                        EPSortOrder,
                        ReportDataType,
                        ChapterID,
                        ChapterCode,
                        ChapterName,
                        StandardTextID,
                        StandardLabel,
                        StandardText,
                        EPTextID,
                        EPLabel,
                        EPText,
                        Numerator,
                        Denominator,
                        CompliancePercent,
                        TotalNumerator,
                        TotalDenominator,
                        TotalCompliancePercent,
                        ResponseCount,
                        TracerCustomID,
                        TracerCustomName,
                        TracerResponseID,
                        TracerResponseTitle,
                        ObservationDate,
                        TracerResponseNote,
                        TracerQuestionID,
                        QuestionText,
                        SortOrder,
                        TracerQuestionAnswerID,
                        UpdatedByID,
                        UpdatedDate,
                        UpdatedByUserName,
                        TagID,
                        ElementID,
                        CopText,
                        CopSortOrder,
                        TagSortOrder,
                        RequirementName,
                        DeemedService,
                        CodeID,
                        TagCode,
                        OrgName_Rank3,
                        OrgName_Rank2,
                        OrgName_Rank1_Dept,
                        OrgID_Rank1_Dept,
                        OrgID_Rank2,
                        OrgID_Rank3,
                        Rank3_IsActive,
                        Rank2_IsActive,
                        Rank1_IsActive,
                        TracerQuestionNote};
                rowustReportTracerByEPGroupByStandardRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowustReportTracerByEPGroupByStandardRow);
                return rowustReportTracerByEPGroupByStandardRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ustReportTracerByEPGroupByStandardDataTable cln = ((ustReportTracerByEPGroupByStandardDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ustReportTracerByEPGroupByStandardDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnChapterSortOrder = base.Columns["ChapterSortOrder"];
                this.columnStandardSortOrder = base.Columns["StandardSortOrder"];
                this.columnEPSortOrder = base.Columns["EPSortOrder"];
                this.columnReportDataType = base.Columns["ReportDataType"];
                this.columnChapterID = base.Columns["ChapterID"];
                this.columnChapterCode = base.Columns["ChapterCode"];
                this.columnChapterName = base.Columns["ChapterName"];
                this.columnStandardTextID = base.Columns["StandardTextID"];
                this.columnStandardLabel = base.Columns["StandardLabel"];
                this.columnStandardText = base.Columns["StandardText"];
                this.columnEPTextID = base.Columns["EPTextID"];
                this.columnEPLabel = base.Columns["EPLabel"];
                this.columnEPText = base.Columns["EPText"];
                this.columnNumerator = base.Columns["Numerator"];
                this.columnDenominator = base.Columns["Denominator"];
                this.columnCompliancePercent = base.Columns["CompliancePercent"];
                this.columnTotalNumerator = base.Columns["TotalNumerator"];
                this.columnTotalDenominator = base.Columns["TotalDenominator"];
                this.columnTotalCompliancePercent = base.Columns["TotalCompliancePercent"];
                this.columnResponseCount = base.Columns["ResponseCount"];
                this.columnTracerCustomID = base.Columns["TracerCustomID"];
                this.columnTracerCustomName = base.Columns["TracerCustomName"];
                this.columnTracerResponseID = base.Columns["TracerResponseID"];
                this.columnTracerResponseTitle = base.Columns["TracerResponseTitle"];
                this.columnObservationDate = base.Columns["ObservationDate"];
                this.columnTracerResponseNote = base.Columns["TracerResponseNote"];
                this.columnTracerQuestionID = base.Columns["TracerQuestionID"];
                this.columnQuestionText = base.Columns["QuestionText"];
                this.columnSortOrder = base.Columns["SortOrder"];
                this.columnTracerQuestionAnswerID = base.Columns["TracerQuestionAnswerID"];
                this.columnUpdatedByID = base.Columns["UpdatedByID"];
                this.columnUpdatedDate = base.Columns["UpdatedDate"];
                this.columnUpdatedByUserName = base.Columns["UpdatedByUserName"];
                this.columnTagID = base.Columns["TagID"];
                this.columnElementID = base.Columns["ElementID"];
                this.columnCopText = base.Columns["CopText"];
                this.columnCopSortOrder = base.Columns["CopSortOrder"];
                this.columnTagSortOrder = base.Columns["TagSortOrder"];
                this.columnRequirementName = base.Columns["RequirementName"];
                this.columnDeemedService = base.Columns["DeemedService"];
                this.columnCodeID = base.Columns["CodeID"];
                this.columnTagCode = base.Columns["TagCode"];
                this.columnOrgName_Rank3 = base.Columns["OrgName_Rank3"];
                this.columnOrgName_Rank2 = base.Columns["OrgName_Rank2"];
                this.columnOrgName_Rank1_Dept = base.Columns["OrgName_Rank1_Dept"];
                this.columnOrgID_Rank1_Dept = base.Columns["OrgID_Rank1_Dept"];
                this.columnOrgID_Rank2 = base.Columns["OrgID_Rank2"];
                this.columnOrgID_Rank3 = base.Columns["OrgID_Rank3"];
                this.columnRank3_IsActive = base.Columns["Rank3_IsActive"];
                this.columnRank2_IsActive = base.Columns["Rank2_IsActive"];
                this.columnRank1_IsActive = base.Columns["Rank1_IsActive"];
                this.columnTracerQuestionNote = base.Columns["TracerQuestionNote"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnChapterSortOrder = new global::System.Data.DataColumn("ChapterSortOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChapterSortOrder);
                this.columnStandardSortOrder = new global::System.Data.DataColumn("StandardSortOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardSortOrder);
                this.columnEPSortOrder = new global::System.Data.DataColumn("EPSortOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPSortOrder);
                this.columnReportDataType = new global::System.Data.DataColumn("ReportDataType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDataType);
                this.columnChapterID = new global::System.Data.DataColumn("ChapterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChapterID);
                this.columnChapterCode = new global::System.Data.DataColumn("ChapterCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChapterCode);
                this.columnChapterName = new global::System.Data.DataColumn("ChapterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChapterName);
                this.columnStandardTextID = new global::System.Data.DataColumn("StandardTextID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardTextID);
                this.columnStandardLabel = new global::System.Data.DataColumn("StandardLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardLabel);
                this.columnStandardText = new global::System.Data.DataColumn("StandardText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardText);
                this.columnEPTextID = new global::System.Data.DataColumn("EPTextID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPTextID);
                this.columnEPLabel = new global::System.Data.DataColumn("EPLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPLabel);
                this.columnEPText = new global::System.Data.DataColumn("EPText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPText);
                this.columnNumerator = new global::System.Data.DataColumn("Numerator", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumerator);
                this.columnDenominator = new global::System.Data.DataColumn("Denominator", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDenominator);
                this.columnCompliancePercent = new global::System.Data.DataColumn("CompliancePercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompliancePercent);
                this.columnTotalNumerator = new global::System.Data.DataColumn("TotalNumerator", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNumerator);
                this.columnTotalDenominator = new global::System.Data.DataColumn("TotalDenominator", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDenominator);
                this.columnTotalCompliancePercent = new global::System.Data.DataColumn("TotalCompliancePercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCompliancePercent);
                this.columnResponseCount = new global::System.Data.DataColumn("ResponseCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponseCount);
                this.columnTracerCustomID = new global::System.Data.DataColumn("TracerCustomID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTracerCustomID);
                this.columnTracerCustomName = new global::System.Data.DataColumn("TracerCustomName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTracerCustomName);
                this.columnTracerResponseID = new global::System.Data.DataColumn("TracerResponseID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTracerResponseID);
                this.columnTracerResponseTitle = new global::System.Data.DataColumn("TracerResponseTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTracerResponseTitle);
                this.columnObservationDate = new global::System.Data.DataColumn("ObservationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservationDate);
                this.columnTracerResponseNote = new global::System.Data.DataColumn("TracerResponseNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTracerResponseNote);
                this.columnTracerQuestionID = new global::System.Data.DataColumn("TracerQuestionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTracerQuestionID);
                this.columnQuestionText = new global::System.Data.DataColumn("QuestionText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuestionText);
                this.columnSortOrder = new global::System.Data.DataColumn("SortOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortOrder);
                this.columnTracerQuestionAnswerID = new global::System.Data.DataColumn("TracerQuestionAnswerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTracerQuestionAnswerID);
                this.columnUpdatedByID = new global::System.Data.DataColumn("UpdatedByID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedByID);
                this.columnUpdatedDate = new global::System.Data.DataColumn("UpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedDate);
                this.columnUpdatedByUserName = new global::System.Data.DataColumn("UpdatedByUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedByUserName);
                this.columnTagID = new global::System.Data.DataColumn("TagID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTagID);
                this.columnElementID = new global::System.Data.DataColumn("ElementID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElementID);
                this.columnCopText = new global::System.Data.DataColumn("CopText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCopText);
                this.columnCopSortOrder = new global::System.Data.DataColumn("CopSortOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCopSortOrder);
                this.columnTagSortOrder = new global::System.Data.DataColumn("TagSortOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTagSortOrder);
                this.columnRequirementName = new global::System.Data.DataColumn("RequirementName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequirementName);
                this.columnDeemedService = new global::System.Data.DataColumn("DeemedService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeemedService);
                this.columnCodeID = new global::System.Data.DataColumn("CodeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeID);
                this.columnTagCode = new global::System.Data.DataColumn("TagCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTagCode);
                this.columnOrgName_Rank3 = new global::System.Data.DataColumn("OrgName_Rank3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgName_Rank3);
                this.columnOrgName_Rank2 = new global::System.Data.DataColumn("OrgName_Rank2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgName_Rank2);
                this.columnOrgName_Rank1_Dept = new global::System.Data.DataColumn("OrgName_Rank1_Dept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgName_Rank1_Dept);
                this.columnOrgID_Rank1_Dept = new global::System.Data.DataColumn("OrgID_Rank1_Dept", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgID_Rank1_Dept);
                this.columnOrgID_Rank2 = new global::System.Data.DataColumn("OrgID_Rank2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgID_Rank2);
                this.columnOrgID_Rank3 = new global::System.Data.DataColumn("OrgID_Rank3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgID_Rank3);
                this.columnRank3_IsActive = new global::System.Data.DataColumn("Rank3_IsActive", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRank3_IsActive);
                this.columnRank2_IsActive = new global::System.Data.DataColumn("Rank2_IsActive", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRank2_IsActive);
                this.columnRank1_IsActive = new global::System.Data.DataColumn("Rank1_IsActive", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRank1_IsActive);
                this.columnTracerQuestionNote = new global::System.Data.DataColumn("TracerQuestionNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTracerQuestionNote);
                this.columnChapterSortOrder.ReadOnly = true;
                this.columnStandardSortOrder.ReadOnly = true;
                this.columnEPSortOrder.ReadOnly = true;
                this.columnReportDataType.ReadOnly = true;
                this.columnChapterID.ReadOnly = true;
                this.columnChapterCode.ReadOnly = true;
                this.columnChapterCode.MaxLength = 10;
                this.columnChapterName.ReadOnly = true;
                this.columnChapterName.MaxLength = 250;
                this.columnStandardTextID.ReadOnly = true;
                this.columnStandardLabel.ReadOnly = true;
                this.columnStandardLabel.MaxLength = 40;
                this.columnStandardText.ReadOnly = true;
                this.columnStandardText.MaxLength = 2147483647;
                this.columnEPTextID.ReadOnly = true;
                this.columnEPLabel.ReadOnly = true;
                this.columnEPLabel.MaxLength = 50;
                this.columnEPText.ReadOnly = true;
                this.columnEPText.MaxLength = 2147483647;
                this.columnNumerator.ReadOnly = true;
                this.columnDenominator.ReadOnly = true;
                this.columnCompliancePercent.ReadOnly = true;
                this.columnTotalNumerator.ReadOnly = true;
                this.columnTotalDenominator.ReadOnly = true;
                this.columnTotalCompliancePercent.ReadOnly = true;
                this.columnResponseCount.ReadOnly = true;
                this.columnTracerCustomID.ReadOnly = true;
                this.columnTracerCustomName.ReadOnly = true;
                this.columnTracerCustomName.MaxLength = 255;
                this.columnTracerResponseID.ReadOnly = true;
                this.columnTracerResponseTitle.ReadOnly = true;
                this.columnTracerResponseTitle.MaxLength = 255;
                this.columnObservationDate.ReadOnly = true;
                this.columnTracerResponseNote.ReadOnly = true;
                this.columnTracerResponseNote.MaxLength = 3000;
                this.columnTracerQuestionID.ReadOnly = true;
                this.columnQuestionText.ReadOnly = true;
                this.columnQuestionText.MaxLength = 3000;
                this.columnSortOrder.ReadOnly = true;
                this.columnTracerQuestionAnswerID.ReadOnly = true;
                this.columnUpdatedByID.ReadOnly = true;
                this.columnUpdatedDate.ReadOnly = true;
                this.columnUpdatedByUserName.ReadOnly = true;
                this.columnUpdatedByUserName.MaxLength = 1;
                this.columnTagID.ReadOnly = true;
                this.columnElementID.ReadOnly = true;
                this.columnCopText.ReadOnly = true;
                this.columnCopText.MaxLength = 2147483647;
                this.columnCopSortOrder.ReadOnly = true;
                this.columnTagSortOrder.ReadOnly = true;
                this.columnRequirementName.ReadOnly = true;
                this.columnRequirementName.MaxLength = 40;
                this.columnDeemedService.ReadOnly = true;
                this.columnDeemedService.MaxLength = 100;
                this.columnCodeID.ReadOnly = true;
                this.columnTagCode.ReadOnly = true;
                this.columnTagCode.MaxLength = 8;
                this.columnOrgName_Rank3.ReadOnly = true;
                this.columnOrgName_Rank3.MaxLength = 200;
                this.columnOrgName_Rank2.ReadOnly = true;
                this.columnOrgName_Rank2.MaxLength = 200;
                this.columnOrgName_Rank1_Dept.ReadOnly = true;
                this.columnOrgName_Rank1_Dept.MaxLength = 200;
                this.columnOrgID_Rank1_Dept.ReadOnly = true;
                this.columnOrgID_Rank2.ReadOnly = true;
                this.columnOrgID_Rank3.ReadOnly = true;
                this.columnRank3_IsActive.ReadOnly = true;
                this.columnRank2_IsActive.ReadOnly = true;
                this.columnRank1_IsActive.ReadOnly = true;
                this.columnTracerQuestionNote.ReadOnly = true;
                this.columnTracerQuestionNote.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ustReportTracerByEPGroupByStandardRow NewustReportTracerByEPGroupByStandardRow() {
                return ((ustReportTracerByEPGroupByStandardRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ustReportTracerByEPGroupByStandardRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ustReportTracerByEPGroupByStandardRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ustReportTracerByEPGroupByStandardRowChanged != null)) {
                    this.ustReportTracerByEPGroupByStandardRowChanged(this, new ustReportTracerByEPGroupByStandardRowChangeEvent(((ustReportTracerByEPGroupByStandardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ustReportTracerByEPGroupByStandardRowChanging != null)) {
                    this.ustReportTracerByEPGroupByStandardRowChanging(this, new ustReportTracerByEPGroupByStandardRowChangeEvent(((ustReportTracerByEPGroupByStandardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ustReportTracerByEPGroupByStandardRowDeleted != null)) {
                    this.ustReportTracerByEPGroupByStandardRowDeleted(this, new ustReportTracerByEPGroupByStandardRowChangeEvent(((ustReportTracerByEPGroupByStandardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ustReportTracerByEPGroupByStandardRowDeleting != null)) {
                    this.ustReportTracerByEPGroupByStandardRowDeleting(this, new ustReportTracerByEPGroupByStandardRowChangeEvent(((ustReportTracerByEPGroupByStandardRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveustReportTracerByEPGroupByStandardRow(ustReportTracerByEPGroupByStandardRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReport_TracerByEPGroupByStandard ds = new dsReport_TracerByEPGroupByStandard();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ustReportTracerByEPGroupByStandardDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ustReportTracerByEPGroupByStandardRow : global::System.Data.DataRow {
            
            private ustReportTracerByEPGroupByStandardDataTable tableustReportTracerByEPGroupByStandard;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ustReportTracerByEPGroupByStandardRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableustReportTracerByEPGroupByStandard = ((ustReportTracerByEPGroupByStandardDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChapterSortOrder {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.ChapterSortOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChapterSortOrder\' in table \'ustReportTracerByEPGroupByStand" +
                                "ard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.ChapterSortOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StandardSortOrder {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.StandardSortOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardSortOrder\' in table \'ustReportTracerByEPGroupByStan" +
                                "dard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.StandardSortOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EPSortOrder {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.EPSortOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPSortOrder\' in table \'ustReportTracerByEPGroupByStandard\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.EPSortOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReportDataType {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.ReportDataTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportDataType\' in table \'ustReportTracerByEPGroupByStandar" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.ReportDataTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChapterID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.ChapterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChapterID\' in table \'ustReportTracerByEPGroupByStandard\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.ChapterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChapterCode {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.ChapterCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChapterCode\' in table \'ustReportTracerByEPGroupByStandard\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.ChapterCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChapterName {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.ChapterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChapterName\' in table \'ustReportTracerByEPGroupByStandard\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.ChapterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StandardTextID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.StandardTextIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardTextID\' in table \'ustReportTracerByEPGroupByStandar" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.StandardTextIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StandardLabel {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.StandardLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardLabel\' in table \'ustReportTracerByEPGroupByStandard" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.StandardLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StandardText {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.StandardTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardText\' in table \'ustReportTracerByEPGroupByStandard\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.StandardTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EPTextID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.EPTextIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPTextID\' in table \'ustReportTracerByEPGroupByStandard\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.EPTextIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPLabel {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.EPLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPLabel\' in table \'ustReportTracerByEPGroupByStandard\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.EPLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EPText {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.EPTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPText\' in table \'ustReportTracerByEPGroupByStandard\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.EPTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Numerator {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.NumeratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Numerator\' in table \'ustReportTracerByEPGroupByStandard\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.NumeratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Denominator {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.DenominatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Denominator\' in table \'ustReportTracerByEPGroupByStandard\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.DenominatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CompliancePercent {
                get {
                    try {
                        return ((decimal)(this[this.tableustReportTracerByEPGroupByStandard.CompliancePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompliancePercent\' in table \'ustReportTracerByEPGroupByStan" +
                                "dard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.CompliancePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalNumerator {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.TotalNumeratorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalNumerator\' in table \'ustReportTracerByEPGroupByStandar" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TotalNumeratorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalDenominator {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.TotalDenominatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDenominator\' in table \'ustReportTracerByEPGroupByStand" +
                                "ard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TotalDenominatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalCompliancePercent {
                get {
                    try {
                        return ((decimal)(this[this.tableustReportTracerByEPGroupByStandard.TotalCompliancePercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCompliancePercent\' in table \'ustReportTracerByEPGroupB" +
                                "yStandard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TotalCompliancePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ResponseCount {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.ResponseCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResponseCount\' in table \'ustReportTracerByEPGroupByStandard" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.ResponseCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TracerCustomID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.TracerCustomIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TracerCustomID\' in table \'ustReportTracerByEPGroupByStandar" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TracerCustomIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TracerCustomName {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.TracerCustomNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TracerCustomName\' in table \'ustReportTracerByEPGroupByStand" +
                                "ard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TracerCustomNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TracerResponseID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.TracerResponseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TracerResponseID\' in table \'ustReportTracerByEPGroupByStand" +
                                "ard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TracerResponseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TracerResponseTitle {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.TracerResponseTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TracerResponseTitle\' in table \'ustReportTracerByEPGroupBySt" +
                                "andard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TracerResponseTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ObservationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableustReportTracerByEPGroupByStandard.ObservationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObservationDate\' in table \'ustReportTracerByEPGroupByStanda" +
                                "rd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.ObservationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TracerResponseNote {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.TracerResponseNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TracerResponseNote\' in table \'ustReportTracerByEPGroupBySta" +
                                "ndard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TracerResponseNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TracerQuestionID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.TracerQuestionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TracerQuestionID\' in table \'ustReportTracerByEPGroupByStand" +
                                "ard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TracerQuestionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QuestionText {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.QuestionTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuestionText\' in table \'ustReportTracerByEPGroupByStandard\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.QuestionTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SortOrder {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.SortOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortOrder\' in table \'ustReportTracerByEPGroupByStandard\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.SortOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TracerQuestionAnswerID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.TracerQuestionAnswerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TracerQuestionAnswerID\' in table \'ustReportTracerByEPGroupB" +
                                "yStandard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TracerQuestionAnswerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UpdatedByID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.UpdatedByIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedByID\' in table \'ustReportTracerByEPGroupByStandard\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.UpdatedByIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableustReportTracerByEPGroupByStandard.UpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedDate\' in table \'ustReportTracerByEPGroupByStandard\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.UpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdatedByUserName {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.UpdatedByUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedByUserName\' in table \'ustReportTracerByEPGroupByStan" +
                                "dard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.UpdatedByUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TagID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.TagIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TagID\' in table \'ustReportTracerByEPGroupByStandard\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TagIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ElementID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.ElementIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ElementID\' in table \'ustReportTracerByEPGroupByStandard\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.ElementIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CopText {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.CopTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CopText\' in table \'ustReportTracerByEPGroupByStandard\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.CopTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CopSortOrder {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.CopSortOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CopSortOrder\' in table \'ustReportTracerByEPGroupByStandard\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.CopSortOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TagSortOrder {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.TagSortOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TagSortOrder\' in table \'ustReportTracerByEPGroupByStandard\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TagSortOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RequirementName {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.RequirementNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequirementName\' in table \'ustReportTracerByEPGroupByStanda" +
                                "rd\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.RequirementNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeemedService {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.DeemedServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeemedService\' in table \'ustReportTracerByEPGroupByStandard" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.DeemedServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CodeID {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.CodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeID\' in table \'ustReportTracerByEPGroupByStandard\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.CodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TagCode {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.TagCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TagCode\' in table \'ustReportTracerByEPGroupByStandard\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TagCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrgName_Rank3 {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.OrgName_Rank3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgName_Rank3\' in table \'ustReportTracerByEPGroupByStandard" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.OrgName_Rank3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrgName_Rank2 {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.OrgName_Rank2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgName_Rank2\' in table \'ustReportTracerByEPGroupByStandard" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.OrgName_Rank2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrgName_Rank1_Dept {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.OrgName_Rank1_DeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgName_Rank1_Dept\' in table \'ustReportTracerByEPGroupBySta" +
                                "ndard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.OrgName_Rank1_DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrgID_Rank1_Dept {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.OrgID_Rank1_DeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgID_Rank1_Dept\' in table \'ustReportTracerByEPGroupByStand" +
                                "ard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.OrgID_Rank1_DeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrgID_Rank2 {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.OrgID_Rank2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgID_Rank2\' in table \'ustReportTracerByEPGroupByStandard\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.OrgID_Rank2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrgID_Rank3 {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.OrgID_Rank3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgID_Rank3\' in table \'ustReportTracerByEPGroupByStandard\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.OrgID_Rank3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Rank3_IsActive {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.Rank3_IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rank3_IsActive\' in table \'ustReportTracerByEPGroupByStandar" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.Rank3_IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Rank2_IsActive {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.Rank2_IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rank2_IsActive\' in table \'ustReportTracerByEPGroupByStandar" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.Rank2_IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Rank1_IsActive {
                get {
                    try {
                        return ((int)(this[this.tableustReportTracerByEPGroupByStandard.Rank1_IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rank1_IsActive\' in table \'ustReportTracerByEPGroupByStandar" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.Rank1_IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TracerQuestionNote {
                get {
                    try {
                        return ((string)(this[this.tableustReportTracerByEPGroupByStandard.TracerQuestionNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TracerQuestionNote\' in table \'ustReportTracerByEPGroupBySta" +
                                "ndard\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableustReportTracerByEPGroupByStandard.TracerQuestionNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChapterSortOrderNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.ChapterSortOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChapterSortOrderNull() {
                this[this.tableustReportTracerByEPGroupByStandard.ChapterSortOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStandardSortOrderNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.StandardSortOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStandardSortOrderNull() {
                this[this.tableustReportTracerByEPGroupByStandard.StandardSortOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPSortOrderNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.EPSortOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPSortOrderNull() {
                this[this.tableustReportTracerByEPGroupByStandard.EPSortOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReportDataTypeNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.ReportDataTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReportDataTypeNull() {
                this[this.tableustReportTracerByEPGroupByStandard.ReportDataTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChapterIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.ChapterIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChapterIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.ChapterIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChapterCodeNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.ChapterCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChapterCodeNull() {
                this[this.tableustReportTracerByEPGroupByStandard.ChapterCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChapterNameNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.ChapterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChapterNameNull() {
                this[this.tableustReportTracerByEPGroupByStandard.ChapterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStandardTextIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.StandardTextIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStandardTextIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.StandardTextIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStandardLabelNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.StandardLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStandardLabelNull() {
                this[this.tableustReportTracerByEPGroupByStandard.StandardLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStandardTextNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.StandardTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStandardTextNull() {
                this[this.tableustReportTracerByEPGroupByStandard.StandardTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPTextIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.EPTextIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPTextIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.EPTextIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPLabelNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.EPLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPLabelNull() {
                this[this.tableustReportTracerByEPGroupByStandard.EPLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEPTextNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.EPTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEPTextNull() {
                this[this.tableustReportTracerByEPGroupByStandard.EPTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumeratorNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.NumeratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumeratorNull() {
                this[this.tableustReportTracerByEPGroupByStandard.NumeratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDenominatorNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.DenominatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDenominatorNull() {
                this[this.tableustReportTracerByEPGroupByStandard.DenominatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompliancePercentNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.CompliancePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompliancePercentNull() {
                this[this.tableustReportTracerByEPGroupByStandard.CompliancePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalNumeratorNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TotalNumeratorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalNumeratorNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TotalNumeratorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalDenominatorNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TotalDenominatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalDenominatorNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TotalDenominatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCompliancePercentNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TotalCompliancePercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCompliancePercentNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TotalCompliancePercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResponseCountNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.ResponseCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResponseCountNull() {
                this[this.tableustReportTracerByEPGroupByStandard.ResponseCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTracerCustomIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TracerCustomIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTracerCustomIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TracerCustomIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTracerCustomNameNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TracerCustomNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTracerCustomNameNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TracerCustomNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTracerResponseIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TracerResponseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTracerResponseIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TracerResponseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTracerResponseTitleNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TracerResponseTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTracerResponseTitleNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TracerResponseTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObservationDateNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.ObservationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObservationDateNull() {
                this[this.tableustReportTracerByEPGroupByStandard.ObservationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTracerResponseNoteNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TracerResponseNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTracerResponseNoteNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TracerResponseNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTracerQuestionIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TracerQuestionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTracerQuestionIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TracerQuestionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuestionTextNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.QuestionTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuestionTextNull() {
                this[this.tableustReportTracerByEPGroupByStandard.QuestionTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSortOrderNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.SortOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSortOrderNull() {
                this[this.tableustReportTracerByEPGroupByStandard.SortOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTracerQuestionAnswerIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TracerQuestionAnswerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTracerQuestionAnswerIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TracerQuestionAnswerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedByIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.UpdatedByIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedByIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.UpdatedByIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedDateNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.UpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedDateNull() {
                this[this.tableustReportTracerByEPGroupByStandard.UpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedByUserNameNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.UpdatedByUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedByUserNameNull() {
                this[this.tableustReportTracerByEPGroupByStandard.UpdatedByUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTagIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TagIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTagIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TagIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElementIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.ElementIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElementIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.ElementIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCopTextNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.CopTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCopTextNull() {
                this[this.tableustReportTracerByEPGroupByStandard.CopTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCopSortOrderNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.CopSortOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCopSortOrderNull() {
                this[this.tableustReportTracerByEPGroupByStandard.CopSortOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTagSortOrderNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TagSortOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTagSortOrderNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TagSortOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequirementNameNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.RequirementNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequirementNameNull() {
                this[this.tableustReportTracerByEPGroupByStandard.RequirementNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeemedServiceNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.DeemedServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeemedServiceNull() {
                this[this.tableustReportTracerByEPGroupByStandard.DeemedServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeIDNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.CodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeIDNull() {
                this[this.tableustReportTracerByEPGroupByStandard.CodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTagCodeNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TagCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTagCodeNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TagCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgName_Rank3Null() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.OrgName_Rank3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgName_Rank3Null() {
                this[this.tableustReportTracerByEPGroupByStandard.OrgName_Rank3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgName_Rank2Null() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.OrgName_Rank2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgName_Rank2Null() {
                this[this.tableustReportTracerByEPGroupByStandard.OrgName_Rank2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgName_Rank1_DeptNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.OrgName_Rank1_DeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgName_Rank1_DeptNull() {
                this[this.tableustReportTracerByEPGroupByStandard.OrgName_Rank1_DeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgID_Rank1_DeptNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.OrgID_Rank1_DeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgID_Rank1_DeptNull() {
                this[this.tableustReportTracerByEPGroupByStandard.OrgID_Rank1_DeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgID_Rank2Null() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.OrgID_Rank2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgID_Rank2Null() {
                this[this.tableustReportTracerByEPGroupByStandard.OrgID_Rank2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgID_Rank3Null() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.OrgID_Rank3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgID_Rank3Null() {
                this[this.tableustReportTracerByEPGroupByStandard.OrgID_Rank3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRank3_IsActiveNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.Rank3_IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRank3_IsActiveNull() {
                this[this.tableustReportTracerByEPGroupByStandard.Rank3_IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRank2_IsActiveNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.Rank2_IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRank2_IsActiveNull() {
                this[this.tableustReportTracerByEPGroupByStandard.Rank2_IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRank1_IsActiveNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.Rank1_IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRank1_IsActiveNull() {
                this[this.tableustReportTracerByEPGroupByStandard.Rank1_IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTracerQuestionNoteNull() {
                return this.IsNull(this.tableustReportTracerByEPGroupByStandard.TracerQuestionNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTracerQuestionNoteNull() {
                this[this.tableustReportTracerByEPGroupByStandard.TracerQuestionNoteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ustReportTracerByEPGroupByStandardRowChangeEvent : global::System.EventArgs {
            
            private ustReportTracerByEPGroupByStandardRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ustReportTracerByEPGroupByStandardRowChangeEvent(ustReportTracerByEPGroupByStandardRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ustReportTracerByEPGroupByStandardRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace JCR.Reports.App_Data.dsReport_TracerByEPGroupByStandardTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ustReportTracerByEPGroupByStandardTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ustReportTracerByEPGroupByStandardTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ustReportTracerByEPGroupByStandard";
            tableMapping.ColumnMappings.Add("ChapterSortOrder", "ChapterSortOrder");
            tableMapping.ColumnMappings.Add("StandardSortOrder", "StandardSortOrder");
            tableMapping.ColumnMappings.Add("EPSortOrder", "EPSortOrder");
            tableMapping.ColumnMappings.Add("ReportDataType", "ReportDataType");
            tableMapping.ColumnMappings.Add("ChapterID", "ChapterID");
            tableMapping.ColumnMappings.Add("ChapterCode", "ChapterCode");
            tableMapping.ColumnMappings.Add("ChapterName", "ChapterName");
            tableMapping.ColumnMappings.Add("StandardTextID", "StandardTextID");
            tableMapping.ColumnMappings.Add("StandardLabel", "StandardLabel");
            tableMapping.ColumnMappings.Add("StandardText", "StandardText");
            tableMapping.ColumnMappings.Add("EPTextID", "EPTextID");
            tableMapping.ColumnMappings.Add("EPLabel", "EPLabel");
            tableMapping.ColumnMappings.Add("EPText", "EPText");
            tableMapping.ColumnMappings.Add("Numerator", "Numerator");
            tableMapping.ColumnMappings.Add("Denominator", "Denominator");
            tableMapping.ColumnMappings.Add("CompliancePercent", "CompliancePercent");
            tableMapping.ColumnMappings.Add("TotalNumerator", "TotalNumerator");
            tableMapping.ColumnMappings.Add("TotalDenominator", "TotalDenominator");
            tableMapping.ColumnMappings.Add("TotalCompliancePercent", "TotalCompliancePercent");
            tableMapping.ColumnMappings.Add("ResponseCount", "ResponseCount");
            tableMapping.ColumnMappings.Add("TracerCustomID", "TracerCustomID");
            tableMapping.ColumnMappings.Add("TracerCustomName", "TracerCustomName");
            tableMapping.ColumnMappings.Add("TracerResponseID", "TracerResponseID");
            tableMapping.ColumnMappings.Add("TracerResponseTitle", "TracerResponseTitle");
            tableMapping.ColumnMappings.Add("ObservationDate", "ObservationDate");
            tableMapping.ColumnMappings.Add("TracerResponseNote", "TracerResponseNote");
            tableMapping.ColumnMappings.Add("TracerQuestionID", "TracerQuestionID");
            tableMapping.ColumnMappings.Add("QuestionText", "QuestionText");
            tableMapping.ColumnMappings.Add("SortOrder", "SortOrder");
            tableMapping.ColumnMappings.Add("TracerQuestionAnswerID", "TracerQuestionAnswerID");
            tableMapping.ColumnMappings.Add("UpdatedByID", "UpdatedByID");
            tableMapping.ColumnMappings.Add("UpdatedDate", "UpdatedDate");
            tableMapping.ColumnMappings.Add("UpdatedByUserName", "UpdatedByUserName");
            tableMapping.ColumnMappings.Add("TagID", "TagID");
            tableMapping.ColumnMappings.Add("ElementID", "ElementID");
            tableMapping.ColumnMappings.Add("CopText", "CopText");
            tableMapping.ColumnMappings.Add("CopSortOrder", "CopSortOrder");
            tableMapping.ColumnMappings.Add("TagSortOrder", "TagSortOrder");
            tableMapping.ColumnMappings.Add("RequirementName", "RequirementName");
            tableMapping.ColumnMappings.Add("DeemedService", "DeemedService");
            tableMapping.ColumnMappings.Add("CodeID", "CodeID");
            tableMapping.ColumnMappings.Add("TagCode", "TagCode");
            tableMapping.ColumnMappings.Add("OrgName_Rank3", "OrgName_Rank3");
            tableMapping.ColumnMappings.Add("OrgName_Rank2", "OrgName_Rank2");
            tableMapping.ColumnMappings.Add("OrgName_Rank1_Dept", "OrgName_Rank1_Dept");
            tableMapping.ColumnMappings.Add("OrgID_Rank1_Dept", "OrgID_Rank1_Dept");
            tableMapping.ColumnMappings.Add("OrgID_Rank2", "OrgID_Rank2");
            tableMapping.ColumnMappings.Add("OrgID_Rank3", "OrgID_Rank3");
            tableMapping.ColumnMappings.Add("Rank3_IsActive", "Rank3_IsActive");
            tableMapping.ColumnMappings.Add("Rank2_IsActive", "Rank2_IsActive");
            tableMapping.ColumnMappings.Add("Rank1_IsActive", "Rank1_IsActive");
            tableMapping.ColumnMappings.Add("TracerQuestionNote", "TracerQuestionNote");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["DBMEdition01"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ustReport_TracerByEPGroupByStandard";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiteID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProgramID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TracerCategoryIDs", global::System.Data.SqlDbType.VarChar, 4000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowCMS", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChapterID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Standards", global::System.Data.SqlDbType.VarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPs", global::System.Data.SqlDbType.VarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompliancePercent", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IncludeNA", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseStartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseEndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsReport_TracerByEPGroupByStandard.ustReportTracerByEPGroupByStandardDataTable dataTable, global::System.Nullable<int> SiteID, global::System.Nullable<int> ProgramID, string TracerCategoryIDs, global::System.Nullable<int> ShowCMS, global::System.Nullable<int> ChapterID, string Standards, string EPs, global::System.Nullable<int> CycleID, global::System.Nullable<decimal> CompliancePercent, global::System.Nullable<int> IncludeNA, global::System.Nullable<global::System.DateTime> ResponseStartDate, global::System.Nullable<global::System.DateTime> ResponseEndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SiteID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SiteID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ProgramID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ProgramID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TracerCategoryIDs == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(TracerCategoryIDs));
            }
            if ((ShowCMS.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(ShowCMS.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ChapterID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(ChapterID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Standards == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(Standards));
            }
            if ((EPs == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(EPs));
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CompliancePercent.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((decimal)(CompliancePercent.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((IncludeNA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(IncludeNA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ResponseStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((System.DateTime)(ResponseStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ResponseEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((System.DateTime)(ResponseEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsReport_TracerByEPGroupByStandard.ustReportTracerByEPGroupByStandardDataTable GetData(global::System.Nullable<int> SiteID, global::System.Nullable<int> ProgramID, string TracerCategoryIDs, global::System.Nullable<int> ShowCMS, global::System.Nullable<int> ChapterID, string Standards, string EPs, global::System.Nullable<int> CycleID, global::System.Nullable<decimal> CompliancePercent, global::System.Nullable<int> IncludeNA, global::System.Nullable<global::System.DateTime> ResponseStartDate, global::System.Nullable<global::System.DateTime> ResponseEndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SiteID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SiteID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ProgramID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ProgramID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TracerCategoryIDs == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(TracerCategoryIDs));
            }
            if ((ShowCMS.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(ShowCMS.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ChapterID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(ChapterID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Standards == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(Standards));
            }
            if ((EPs == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(EPs));
            }
            if ((CycleID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(CycleID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CompliancePercent.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((decimal)(CompliancePercent.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((IncludeNA.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(IncludeNA.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ResponseStartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((System.DateTime)(ResponseStartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ResponseEndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((System.DateTime)(ResponseEndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            dsReport_TracerByEPGroupByStandard.ustReportTracerByEPGroupByStandardDataTable dataTable = new dsReport_TracerByEPGroupByStandard.ustReportTracerByEPGroupByStandardDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsReport_TracerByEPGroupByStandard dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsReport_TracerByEPGroupByStandard dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsReport_TracerByEPGroupByStandard dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsReport_TracerByEPGroupByStandard dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591