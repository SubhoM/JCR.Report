
<div>
   
    <div id="resultCompQuesChart" style="cursor:pointer;">
        <div id="divtiebreakermessage" align="center" style="background-color: #f2dede; color: #a94442;"></div>
        @(Html.Kendo().Grid<JCR.Reports.Areas.Tracer.ViewModels.ComplianceQuestionChart>()
      .Name("gridCompQuesChart")
      .DataSource(dataSource => dataSource // Configure the grid data source
                                         .Ajax() // Specify that ajax binding is used
                                         .ServerOperation(false)
                                         .Read(read => read
                                         .Action("_ComplianceQuestionChartExcel", "ComplianceQuestion")
                                         .Data("additionalData")) // Set the action method which will return the data in JSON format
                                         .PageSize(20))
               .ToolBar(tb =>
        {
           
            tb.Pdf();
          
        })
                                       .Events(e => e.DataBound("dataBoundProgress").Change("OnChangeShowDetails").PdfExport("pdfExport"))
                     
    
               .Columns(columns =>
               {

                   columns.Bound(p => p.QID).Hidden(true).Title("Q#");
                   columns.Bound(p => p.QuesNo).Hidden(true).Title("Q#").Width(50);
                   columns.Bound(p => p.QuestionID).Hidden(true).Width(50);
                   columns.Bound(p => p.QuestionText).Width(600).Title("Question").Encoded(false);
                   columns.Bound(p => p.TotalNumerator).Width(100).Title("Total Num");
                   columns.Bound(p => p.TotalDenominator).Width(100).Title("Total Den");
                   columns.Bound(p => p.Compliance).ClientTemplate("<div class='progress' align='center'></div>").Width(400).Title("Overall Comp %");

               })

    
      .Filterable(filter => filter
                    .Extra(false)
                    .Operators(operators => operators
                    .ForString(str => str.Clear()
                    .Contains("Contains")
                    .StartsWith("Starts with")
                    .IsEqualTo("Is equal to")
                    .IsNotEqualTo("Is not equal to"))))
       .Selectable()
      .Sortable()
      .AutoBind(false)
      .Resizable(resizing => resizing.Columns(true))
      .Scrollable(scrollable => scrollable.Height("auto"))
      .Pageable(pageable => pageable
                        .Refresh(true)
                        .PageSizes(new int[] { 20, 50, 100 })

                        )
        )
    </div>
    </div>



<style>
    #gridCompQuesChart {
        display: none;
    }

 
</style>












